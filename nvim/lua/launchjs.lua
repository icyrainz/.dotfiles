return {
version = "0.2.0",
configurations = {
	{
		name = "Attach by Process ID",
		type = "node2",
		request = "attach",
		process_id = "${command:PickProcess}",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Attach by Process ID - External Term",
		type = "node2",
		request = "attach",
		process_id = "${command:PickProcess}",
		console = "externalTerminal",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Launch Server",
		type = "node2",
		request = "launch",
		console = "integratedTerminal",
		program = "${workspaceFolder}/dist/server.js",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		env = {
			ENV = "dev",
			TZ = "UTC",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Launch Server - External Term",
		type = "node2",
		request = "launch",
		console = "externalTerminal",
		program = "${workspaceFolder}/dist/server.js",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		env = {
			ENV = "dev",
			TZ = "UTC",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Launch Worker",
		type = "node2",
		request = "launch",
		console = "integratedTerminal",
		program = "${workspaceFolder}/dist/tasks/worker.js",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		env = {
			ENV = "dev",
			TZ = "UTC",
			TASKS_IN_CHILD_PROCESS = "false",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Launch Worker - External Term",
		type = "node2",
		request = "launch",
		console = "externalTerminal",
		program = "${workspaceFolder}/dist/tasks/worker.js",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		env = {
			ENV = "dev",
			TZ = "UTC",
			TASKS_IN_CHILD_PROCESS = "false",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Generate Avro Types",
		type = "node2",
		request = "launch",
		console = "integratedTerminal",
		program = "${workspaceFolder}/build/dist/generate_avro_types.js",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Generate Avro Types - External Term",
		type = "node2",
		request = "launch",
		console = "externalTerminal",
		program = "${workspaceFolder}/build/dist/generate_avro_types.js",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Generate Matrix Types",
		type = "node2",
		request = "launch",
		console = "integratedTerminal",
		program = "${workspaceFolder}/build/dist/generate_matrix_types.js",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Generate Matrix Types - External Term",
		type = "node2",
		request = "launch",
		console = "externalTerminal",
		program = "${workspaceFolder}/build/dist/generate_matrix_types.js",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Launch Unit Test - Current File",
		type = "node2",
		request = "launch",
		console = "integratedTerminal",
		program = "${workspaceFolder}/node_modules/.bin/mocha",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		env = {
			TASKS_IN_CHILD_PROCESS = "false",
			ENV = "test",
			CONSOLE_LOG_LEVEL = "debug",
			TZ = "UTC",
			LOG_DEFAULT_DB = "false",
		},
		args = {
			"--timeout",
			"0",
			"--require",
			"ts-node/register",
			"--file",
			"${workspaceFolder}/src/test/unit/lifecycle.ts",
			"${file}",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Launch Unit Test - Current File - External Term",
		type = "node2",
		request = "launch",
		console = "externalTerminal",
		program = "${workspaceFolder}/node_modules/.bin/mocha",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		env = {
			TASKS_IN_CHILD_PROCESS = "false",
			ENV = "test",
			CONSOLE_LOG_LEVEL = "debug",
			TZ = "UTC",
			LOG_DEFAULT_DB = "false",
		},
		args = {
			"--timeout",
			"0",
			"--require",
			"ts-node/register",
			"--file",
			"${workspaceFolder}/src/test/unit/lifecycle.ts",
			"${file}",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Launch Integration Test - Current File",
		type = "node2",
		request = "launch",
		console = "integratedTerminal",
		program = "${workspaceFolder}/node_modules/.bin/mocha",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		env = {
			TASKS_IN_CHILD_PROCESS = "false",
			CONSOLE_LOG_LEVEL = "debug",
			LOG_DEFAULT_DB = "false",
			TZ = "UTC",
			ENV = "test",
		},
		args = {
			"--timeout",
			"0",
			"--require",
			"ts-node/register",
			"--file",
			"${workspaceFolder}/src/test/integration/lifecycle.ts",
			"${file}",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
	{
		name = "Launch Integration Test - Current File - External Term",
		type = "node2",
		request = "launch",
		console = "externalTerminal",
		program = "${workspaceFolder}/node_modules/.bin/mocha",
		skip_files = {
			"<node_internals>/**",
			"node_modules/**",
		},
		env = {
			TASKS_IN_CHILD_PROCESS = "false",
			CONSOLE_LOG_LEVEL = "debug",
			LOG_DEFAULT_DB = "false",
			TZ = "UTC",
			ENV = "test",
		},
		args = {
			"--timeout",
			"0",
			"--require",
			"ts-node/register",
			"--file",
			"${workspaceFolder}/src/test/integration/lifecycle.ts",
			"${file}",
		},
		cwd = vim.fn.getcwd(),
		sourceMaps = true,
	},
}}
